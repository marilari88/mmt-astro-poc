---
import NavigationItem from '../components/NavigationItem.astro'
import MMTLogo from '../components/MMTLogo.astro'
import {Button} from '@translated/babele-react'
import Menu from '../assets/images/icons/menu.svg'

type Props = {
  tone: 'neutral' | 'primary'
}

const {tone} = Astro.props
---

<header
  class:list={[
    {'bg-orange-100 text-neutral-1200': tone != 'primary'},
    {'bg-primary-800 text-neutral-25': tone == 'primary'},
  ]}
>
  <div
    class="flex flex-row max-w-[1400px] w-[86%] mx-auto justify-between pt-8 pb-16"
  >
    <div>
      <MMTLogo width={200} />
    </div>
    <div
      id="backdropMenu"
      class="absolute bg-neutral-1200/8 inset-0 lg:hidden pointer-events-none opacity-none transition-opacity z-30"
    >
    </div>
    <div
      id="toggleMenu"
      class="lg:hidden absolute top-8 right-8 text-neutral-25 z-50"
    >
      <img src={Menu.src} alt="Menu" />
    </div>
    <nav
      id="navigationMenu"
      data-expanded="false"
      class:list={[
        'max-w-[450px] lg:max-w-fit w-full z-40 lg:bg-transparent fixed inset-y-0 right-0 lg:static lg:transform-none translate-x-full data-[expanded=true]:translate-x-0 transition-all',
        {'bg-primary-700': tone == 'primary'},
        {'bg-orange-100': tone != 'primary'},
      ]}
    >
      <ul
        class="gap-4 lg:gap-5 pt-[100px] pr-16 lg:pt-0 lg:pr-0 items-end lg:items-center flex flex-col lg:flex-row"
      >
        <a href="/">
          <NavigationItem>For enterprises</NavigationItem>
        </a>
        <a href="/translator">
          <NavigationItem>For translator</NavigationItem>
        </a>
        <a href="/translate">
          <NavigationItem>Translate</NavigationItem>
        </a>
        <a href="/login">
          <NavigationItem>Login</NavigationItem>
        </a>
        <a href="/pricing">
          <Button
            variant={{tone, mode: 'outline'}}
            className="whitespace-nowrap"
          >
            Get started
          </Button>
        </a>
      </ul>
    </nav>
  </div>
</header>
<script>
  const toggleMenu = document.getElementById('toggleMenu')
  const navigationMenu = document.getElementById('navigationMenu')
  const backdropMenu = document.getElementById('backdropMenu')

  toggleMenu?.addEventListener('click', () => {
    const isMenuExpanded = navigationMenu?.getAttribute('data-expanded')

    if (isMenuExpanded === 'true') {
      navigationMenu?.setAttribute('data-expanded', 'false')
    } else {
      navigationMenu?.setAttribute('data-expanded', 'true')
    }
    backdropMenu?.classList.toggle('opacity-none')
  })
</script>
